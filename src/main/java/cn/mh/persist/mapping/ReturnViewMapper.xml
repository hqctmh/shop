<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.mh.persist.mapper.ReturnViewMapper">
  <resultMap id="BaseResultMap" type="cn.mh.entity.ReturnView">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="main_id" jdbcType="VARCHAR" property="mainId" />
    <result column="goods_id" jdbcType="VARCHAR" property="goodsId" />
    <result column="account" jdbcType="INTEGER" property="account" />
    <result column="Indent_id" jdbcType="VARCHAR" property="indentId" />
    <result column="store_indent_id" jdbcType="VARCHAR" property="storeIndentId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="store_id" jdbcType="VARCHAR" property="storeId" />
    <result column="order_num" jdbcType="VARCHAR" property="orderNum" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, main_id, goods_id, account, Indent_id, store_indent_id, create_time, update_time, 
    status, store_id, order_num, price, user_id
  </sql>
  <select id="selectByExample" parameterType="cn.mh.persist.example.ReturnViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from returnview
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="paging">
      limit ${rowIndex},${pageSize}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.mh.persist.example.ReturnViewExample">
    delete from returnview
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.mh.entity.ReturnView">
    insert into returnview (id, main_id, goods_id, 
      account, Indent_id, store_indent_id, 
      create_time, update_time, status, 
      store_id, order_num, price, 
      user_id)
    values (#{id,jdbcType=VARCHAR}, #{mainId,jdbcType=VARCHAR}, #{goodsId,jdbcType=VARCHAR}, 
      #{account,jdbcType=INTEGER}, #{indentId,jdbcType=VARCHAR}, #{storeIndentId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, 
      #{storeId,jdbcType=VARCHAR}, #{orderNum,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{userId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.mh.entity.ReturnView">
    insert into returnview
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="mainId != null">
        main_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="indentId != null">
        Indent_id,
      </if>
      <if test="storeIndentId != null">
        store_indent_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="mainId != null">
        #{mainId,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=INTEGER},
      </if>
      <if test="indentId != null">
        #{indentId,jdbcType=VARCHAR},
      </if>
      <if test="storeIndentId != null">
        #{storeIndentId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.mh.persist.example.ReturnViewExample" resultType="java.lang.Long">
    select count(*) from returnview
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update returnview
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.mainId != null">
        main_id = #{record.mainId,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=INTEGER},
      </if>
      <if test="record.indentId != null">
        Indent_id = #{record.indentId,jdbcType=VARCHAR},
      </if>
      <if test="record.storeIndentId != null">
        store_indent_id = #{record.storeIndentId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNum != null">
        order_num = #{record.orderNum,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update returnview
    set id = #{record.id,jdbcType=VARCHAR},
      main_id = #{record.mainId,jdbcType=VARCHAR},
      goods_id = #{record.goodsId,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=INTEGER},
      Indent_id = #{record.indentId,jdbcType=VARCHAR},
      store_indent_id = #{record.storeIndentId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      store_id = #{record.storeId,jdbcType=VARCHAR},
      order_num = #{record.orderNum,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      user_id = #{record.userId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>